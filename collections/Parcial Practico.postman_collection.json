{
	"info": {
		"_postman_id": "6a4b641b-1a50-4284-8808-f20837097421",
		"name": "Parcial Practico",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37882504"
	},
	"item": [
		{
			"name": "Socio",
			"item": [
				{
					"name": "create Member",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"birthDate\": \"{{$randomDatePast}}\",\r\n    \"description\": \"{{$randomLoremSentence}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/members",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "create invalid Member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains the expected number of properties\", function () {\r",
									"    var responseJSON = pm.response.json();\r",
									"    var keys = Object.keys(responseJSON);\r",
									"    pm.expect(keys.length).to.greaterThan(1);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"description\": \"{{$randomLoremSentence}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/members",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "get member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let responseData = pm.response.json();\r",
									"pm.collectionVariables.set(\"socio_id\", responseData[0].id);\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/members",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "get member detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/members/{{socio_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members",
								"{{socio_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get non member detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The socio with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/members/27ba751e-0000-0000-0000-9c44447fb1d9",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members",
								"27ba751e-0000-0000-0000-9c44447fb1d9"
							]
						}
					},
					"response": []
				},
				{
					"name": "update member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"birthDate\": \"{{$randomDatePast}}\",\r\n    \"description\": \"{{$randomLoremSentence}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/members/{{socio_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members",
								"{{socio_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update non existing member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The socio with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"birthDate\": \"{{$randomDatePast}}\",\r\n    \"description\": \"{{$randomLoremSentence}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/members/27ba751e-0000-0000-0000-9c44447fb1d9",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members",
								"27ba751e-0000-0000-0000-9c44447fb1d9"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/members/{{socio_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members",
								"{{socio_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete  non existing member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The socio with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/members/27ba751e-0000-0000-0000-9c44447fb1d9",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members",
								"27ba751e-0000-0000-0000-9c44447fb1d9"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Club",
			"item": [
				{
					"name": "create clubs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains the expected number of properties\", function () {\r",
									"    var responseJSON = pm.response.json();\r",
									"    var keys = Object.keys(responseJSON);\r",
									"    pm.expect(keys.length).to.equal(5);\r",
									"});\r",
									"pm.test(\"Response has content type application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomCompanyName}}\",\r\n    \"foundationDate\": \"{{$randomDatePast}}\",\r\n    \"image\": \"{{$randomLoremSentence}}\",\r\n    \"description\": \"{{$randomLoremSentence}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/clubs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"clubs"
							]
						}
					},
					"response": []
				},
				{
					"name": "create invalid clubs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([400, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains the expected number of properties\", function () {\r",
									"    var responseJSON = pm.response.json();\r",
									"    var keys = Object.keys(responseJSON);\r",
									"    pm.expect(keys.length).to.greaterThan(1);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomCompanyName}}\",\r\n    \"image\": \"{{$randomLoremSentence}}\",\r\n    \"description\": \"{{$randomLoremSentence}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/clubs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"clubs"
							]
						}
					},
					"response": []
				},
				{
					"name": "get clubs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let responseData = pm.response.json();\r",
									"pm.collectionVariables.set(\"club_id\", responseData[0].id);\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/clubs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"clubs"
							]
						}
					},
					"response": []
				},
				{
					"name": "get clubsDetalle",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/clubs/{{club_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"clubs",
								"{{club_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get non clubsDetalle",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The club with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/clubs/34aa4994-d293-0000-0000-2d142faf6345",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"clubs",
								"34aa4994-d293-0000-0000-2d142faf6345"
							]
						}
					},
					"response": []
				},
				{
					"name": "update clubs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomCompanyName}}\",\r\n    \"foundationDate\": \"{{$randomDatePast}}\",\r\n    \"image\": \"{{$randomLoremSentence}}\",\r\n    \"description\": \"{{$randomLoremSentence}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/clubs/{{club_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"clubs",
								"{{club_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "update  non existing clubs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The club with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomCompanyName}}\",\r\n    \"foundationDate\": \"{{$randomDatePast}}\",\r\n    \"image\": \"{{$randomLoremSentence}}\",\r\n    \"description\": \"{{$randomLoremSentence}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/clubs/34aa4994-d293-0000-0000-2d142faf6345",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"clubs",
								"34aa4994-d293-0000-0000-2d142faf6345"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete clubs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/clubs/{{club_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"clubs",
								"{{club_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete  non existing clubs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The club with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/clubs/34aa4994-d293-0000-0000-2d142faf6345",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"clubs",
								"34aa4994-d293-0000-0000-2d142faf6345"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Socio Club",
			"item": [
				{
					"name": "create clubs Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains the expected number of properties\", function () {\r",
									"    var responseJSON = pm.response.json();\r",
									"    var keys = Object.keys(responseJSON);\r",
									"    pm.expect(keys.length).to.equal(5);\r",
									"});\r",
									"\r",
									"let responseData = pm.response.json();\r",
									"pm.collectionVariables.set(\"club_id\", responseData.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomCompanyName}}\",\r\n    \"foundationDate\": \"{{$randomDatePast}}\",\r\n    \"image\": \"{{$randomLoremSentence}}\",\r\n    \"description\": \"{{$randomLoremSentence}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/clubs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"clubs"
							]
						}
					},
					"response": []
				},
				{
					"name": "create Member Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let responseData = pm.response.json();\r",
									"pm.collectionVariables.set(\"socio_id\", responseData.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"birthDate\": \"{{$randomDatePast}}\",\r\n    \"description\": \"{{$randomLoremSentence}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/members",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "Agregar club a socio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/members/{{socio_id}}/clubs/{{club_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members",
								"{{socio_id}}",
								"clubs",
								"{{club_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Agregar  non existing club a socio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/members/27ba751e-0000-0000-0000-9c44447fb1d9/clubs/{{club_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members",
								"27ba751e-0000-0000-0000-9c44447fb1d9",
								"clubs",
								"{{club_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get clubs a socio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/members/{{socio_id}}/clubs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members",
								"{{socio_id}}",
								"clubs"
							]
						}
					},
					"response": []
				},
				{
					"name": "get club a socio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/members/{{socio_id}}/clubs/{{club_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members",
								"{{socio_id}}",
								"clubs",
								"{{club_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get non exiting club a socio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The socio with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/members/{{socio_id}}/clubs/8f44e123-ec00-0000-0000-1384994a6d3b",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members",
								"{{socio_id}}",
								"clubs",
								"8f44e123-ec00-0000-0000-1384994a6d3b"
							]
						}
					},
					"response": []
				},
				{
					"name": "associate clubs a socio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"{{club_id}}\"\r\n    }\r\n]\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/members/{{socio_id}}/clubs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members",
								"{{socio_id}}",
								"clubs"
							]
						}
					},
					"response": []
				},
				{
					"name": "associate non exisitng clubs a socio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The socio with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"{{club_id}}\"\r\n    }\r\n]\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/members/{{socio_id}}/clubs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members",
								"{{socio_id}}",
								"clubs"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete clubs a socio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"{{club_id}}\"\r\n    }\r\n]\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/members/{{socio_id}}/clubs/{{club_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members",
								"{{socio_id}}",
								"clubs",
								"{{club_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete non exisitng  clubs a socio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The socio with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"{{club_id}}\"\r\n    }\r\n]\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/members/{{socio_id}}/clubs/{{club_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"members",
								"{{socio_id}}",
								"clubs",
								"{{club_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		},
		{
			"key": "socio_id",
			"value": ""
		},
		{
			"key": "club_id",
			"value": ""
		}
	]
}